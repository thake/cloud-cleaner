name: Release

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    continue-on-error: true
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: linux-x64
          - os: ubuntu-24.04-arm
            arch: linux-arm64
          - os: windows-latest
            arch: windows-x64
          - os: macos-latest
            arch: macos-arm64
          - os: macos-13
            arch: macos-x64
    env:
      ARCHIVE_NAME: cloud-cleaner-aws_${{ matrix.arch }}_${{ github.event.release.tag_name }}
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-java@v4
      with:
        distribution: 'graalvm'
        java-version: '21'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    - name: Build with Gradle Wrapper
      run: ./gradlew nativeCompile
    - name: Make dist dir
      run: |
        mkdir -p dist
        cp -r cloud-cleaner-aws/build/native/nativeCompile/* ./dist/
    - name: Zip nativeCompile
      working-directory: dist
      if: matrix.os != 'windows-latest'
      run: | 
        tar -czf "$ARCHIVE_NAME.tar.gz" *
        echo "ARCHIVE_NAME=$ARCHIVE_NAME.tar.gz" >> $GITHUB_ENV
    - name: Zip nativeCompile on windows
      working-directory: dist
      if: matrix.os == 'windows-latest'
      run: |
        powershell Compress-Archive -Path * -DestinationPath "$Env:ARCHIVE_NAME.zip"
        echo "ARCHIVE_NAME=$Env:ARCHIVE_NAME.zip" | Out-File -FilePath $env:GITHUB_ENV -Append
    - name: Upload result to release
      if: matrix.os != 'windows-latest'
      env:
        GH_TOKEN: ${{ github.token }}
      run: gh release upload ${{ github.event.release.tag_name }} "./dist/$ARCHIVE_NAME" --clobber
    - name: Upload result to release on windows
      if: matrix.os == 'windows-latest'
      env:
        GH_TOKEN: ${{ github.token }}
      run: gh release upload ${{ github.event.release.tag_name }} "./dist/$Env:ARCHIVE_NAME" --clobber